class Influential is subclass of Attendee
types

values
-- TODO Define values here

instance variables
	private jobPosition : Utils`String := [];
	private company : Utils`String := [];
	private description : Utils`String := [];
	private country : Utils`String := [];

operations

	-- default constructor of the influential attendee class 
	public Influential : () ==> Influential
		Influential() == (
				jobPosition := "Undefined";
	  	  company := "Undefined";
	  	  description := "";
	  	  country := "Undefined";
	  		Attendee ();
	  );
	  
	-- constructor of the influential attendee class 
	 public Influential : Utils`String * Utils`String * Utils`String * Utils`String * Utils`String ==> Influential
	  	Influential (attendeeName, attendeeJobPosition, attendeeCompany, attendeeDescription, attendeeCountry) == (
	  	  jobPosition := attendeeJobPosition;
	  	  company := attendeeCompany;
	  	  description := attendeeDescription;
	  	  country := attendeeCountry;
	  		Attendee(attendeeName);	
	  	)
	  	pre len attendeeName > 0 and len attendeeJobPosition > 0 and len attendeeCompany > 0 and len attendeeCountry > 0;
	  	
	 -- returns the influential attendee's position
	 public GetJobPosition : () ==> Utils`String
	  	GetJobPosition () == (
	  		return jobPosition;
	  	);
	  	
	 -- returns the influential attendee's job
	 public GetCompany : () ==> Utils`String
	  	GetCompany () == (
	  		return company;
	  	);
	  	
	 -- returns the influential attendee's description
	 public GetDescription : () ==> Utils`String
	  	GetDescription () == (
	  		return description;
	  	);
	  	
	  -- returns the influential attendee's country
	  public GetCountry : () ==> Utils`String
	  	GetCountry () == (
	  		return country;
	  	);
	  	
	  -- prints the influential attendee's information
	 public Print : () ==> ()
	  	Print() == (
	  	  IO`print("Name: ");
		  	IO`print(self.GetName());
		  	IO`print("\n");
		  	IO`print("Job Position: ");
		  	IO`print(self.GetJobPosition());
		  	IO`print("\n");
		  	IO`print("Company: ");
		  	IO`print(self.GetCompany());
		  	IO`print("\n");
		  	IO`print("Description: ");
		  	IO`print(self.GetDescription());
		  	IO`print("\n");
		  	IO`print("Country: ");
		  	IO`print(self.GetCountry());
		  	IO`print("\n");
	  	);
	  	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Influential