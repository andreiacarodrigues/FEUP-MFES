class Talk
types
values

instance variables
	private name : Utils`String := [];
	private description : Utils`String := [];
	private date : Utils`Date;
	private time : Utils`Time;
	private duration : nat1;
	private speakers : set of Influential := {};
	private attendees : set of Attendee := {};
	
operations
	-- constructor of the talk class 
		public Talk :  Utils`String *  Utils`String *  Utils`Date *  Utils`Time * nat1 ==> Talk
	  	Talk (talkName, talkDescription, talkDate, talkTime, talkDuration) == (
	  		name := talkName;
	  		description := talkDescription;
	  		date := talkDate;
	  		time := talkTime;
	  		duration := talkDuration;
	  		return self
	  	);
	  	
	 -- returns the talk's name
	 public GetName : () ==> Utils`String
	  	GetName () == (
	  		return name;
	  	);
	  	
	 -- returns the talk's description
	 public GetDescription : () ==> Utils`String
	  	GetDescription () == (
	  		return description;
	  	);
	  	
	 -- returns the talk's date
	 public GetDate : () ==> Utils`Date
	  	GetDate () == (
	  		return date;
	  	);
	  	
	 -- returns the talk's time
	 public GetTime : () ==> Utils`Time
	  	GetTime () == (
	  		return time;
	  	);
	  	
	 -- returns the talk's duration
	 public GetDuration : () ==> nat1
	  	GetDuration () == (
	  		return duration;
	  	);


  -- prints the talk information
	  public Print : () ==> ()
	  	Print() == (
	  		IO`print("Name: "); IO`print(self.GetName());
	  		IO`print("\n");
	  		IO`print("Description: "); IO`print(self.GetDescription());
	  		IO`print("\n");
	  		IO`print("Date: "); IO`print(self.GetDate().year); IO`print("-"); 
	  		IO`print(self.GetDate().month); IO`print("-"); IO`print(self.GetDate().day);
	  		IO`print("\n");
	  		IO`print("Time: ");IO`print(self.GetTime().hour); IO`print(":"); IO`print(self.GetTime().minute);
	  		IO`print("\n");
	  		IO`print("Duration: "); IO`print(self.GetDuration()); IO`print(" minutes");
	  	);
	  	
functions

traces
-- TODO Define Combinatorial Test Traces here
end Talk